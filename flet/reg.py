#import
import streamlit as st

asd = False
reemail = [

    '$',
    '%',
    '#',
    '*',
    '^',
    '(',
    ')'
    '!',
    '{',
    '}',
    ']',
    '[',
    '<',
    '>'
    '?',
    "'",
    '"',
    '=',
    '+',
    '|',
    '/',
    '^',
    '‚Ññ',
    ';',
    '~',
    '?',
    ',',
    ':',
]
repass = [

    '$',
    '%',
    '#',
    '*',
    '^',
    '(',
    ')'
    '!',
    '{',
    '}',
    ']',
    '[',
    '<',
    '>'
    '?',
    "'",
    '"',
    '=',
    '+',
    '|',
    '/',
    '^',
    '‚Ññ',
    ';',
    '~',
    '?',
    ',',
    ':',
    '@'
]

null_input = False


error = False
st.title("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
#Name
Name = st.text_input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ **–ò–º—è**', placeholder='Name')
for i in repass:
    if str(i) in Name:
        with st.empty():
            error = True
            ss = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–æ–ª–µ '–ò–º—è' –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã."


#Email
email = st.text_input('–í–≤–µ–¥–∏—Ç–µ **–ü–æ—á—Ç—É**', placeholder='Email')
for i in reemail:
    if str(i) in email:
        with st.empty():
            error = True
            ss = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–æ–ª–µ '–ü–∞—Ä–æ–ª—å' –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã."

    if '@' not in email and len(email) > 2:
        error = True
        ss = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, —Ç–∞–∫ –∫–∞–∫ —Å–∏–º–≤–æ–ª @ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
    if len(email) > 30 or (len(email) < 3 and len(email) > 1):
        error = True
        ss = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–æ–ª–µ '–ü–æ—á—Ç–∞' —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ—Ç 3 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤."




#Password
password = st.text_input('–í–≤–µ–¥–∏—Ç–µ **–ü–∞—Ä–æ–ª—å**', placeholder='Password', type='password')
for i in repass:
    if str(i) in password:


        error = True
        ss = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–æ–ª–µ '–ü–∞—Ä–æ–ª—å' –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã."

    if len(password) > 30 or (len(password) < 3 and len(password) > 1):
        error = True
        ss = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–æ–ª–µ '–ü–∞—Ä–æ–ª—å' —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ—Ç 3 –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤."



if len(password) < 1 and len(Name) < 1 and len(email) < 1:



    null_input = True

#st.form_submit_button('–í–æ–π—Ç–∏')

#Button



if error == False:
    with st.empty():

        reg = st.button('**–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è**', key='login')
        if reg:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.", icon='‚ö†')



else:
    st.warning(ss, icon='‚ö†')
    if null_input == True:

        asd = True



button = st.link_button('**–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è**', url="log.py")
if button:
    st.markdown("<script>window.close();</script>", unsafe_allow_html=True)




#st.link_button('–í–æ–π—Ç–∏', url="#")




button = st.link_button('**–í–æ–π—Ç–∏**', url="https://mysitelogi.streamlit.app/")
from telebot import types
import telebot
streamlit.write('hello')
user1 = 0

bot = telebot.TeleBot('7066747596:AAGQUM5hCjfxvKs5SE2fPwfuzQjA6n7bJBU')


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_photo(message.chat.id, 'https://bytepix.ru/ib/Op7aJZSqyR.png')
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º –∏–≥—Ä–æ–≤–æ–º –∫–ª—É–±–µ, –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–ø—å—é—Ç–µ—Ä–æ–≤, –∏–ª–∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –Ω–∞—à–∏–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏.')
    markup_inline = types.InlineKeyboardMarkup()
    item_yes = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='yes')
    markup_inline.add(item_yes)
    bot.send_message(message.chat.id, '–ù–∞–∂–∏–º–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
                     reply_markup=markup_inline)

    bot.register_message_handler(message, callback_message)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):



    if callback.data == 'U':
            markup_inline = types.InlineKeyboardMarkup()
            sum1 = types.InlineKeyboardButton(text='100', callback_data='pay100')
            sum3 = types.InlineKeyboardButton(text='300', callback_data='pay300')
            sum2 = types.InlineKeyboardButton(text='500', callback_data='pay500')
            lock = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='No')
            markup_inline.add(lock, sum1, sum3, sum2)
            bot.edit_message_text('–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç üí≥\n –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–æ–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Å—É–º–º–æ–π –¥–ª—è –æ–ø–ª–∞—Ç—ã',callback.message.chat.id, callback.message.message_id,  reply_markup=markup_inline)
            print(callback.data)

    if callback.data == "No":
        def menus(callback):
            markup_inline = types.InlineKeyboardMarkup()
            item_1 = types.InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç üí≥', callback_data='U')
            item_2 = types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª–∞–Ω—Å üí∞', callback_data='S')
            item_3 = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å –∏–≥—Ä—É üöÄ', callback_data='P')
            markup_inline.add(item_3)
            markup_inline.add(item_1, item_2)
            bot.send_message(callback.message.chat.id, 'Menu', reply_markup=markup_inline)
        menus(callback)


    if callback.data == 'yes':
            print(callback.data)
            bot.edit_message_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å' + " " + callback.from_user.first_name + '\n –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–ø–∏—à–∏—Ç–µ /menu',callback.message.chat.id, callback.message.message_id)
            bot.delete_message(callback.message.chat.id, callback.message.message_id - 2)
            bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)



@bot.message_handler(commands=['menu'])
def start(message):
    markup_inline = types.InlineKeyboardMarkup()
    item_1 = types.InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç üí≥', callback_data='U')
    item_2 = types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª–∞–Ω—Å üí∞', callback_data='S')
    item_3 = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å –∏–≥—Ä—É üöÄ', callback_data='P')

    markup_inline.add(item_3)
    markup_inline.add(item_1, item_2)
    bot.send_message(message.chat.id, 'Menu', reply_markup=markup_inline)
    bot.register_message_handler(message, callback_message)



bot.polling(none_stop=True)

